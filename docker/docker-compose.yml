version: '2'
networks:
  par_net:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/16

services:
  postgres_udk:
    build:
        context: postgres
        dockerfile: Dockerfile
    networks:
      par_net:
        ipv4_address: 10.2.1.2
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asdfasdf
      POSTGRES_DB: UDK2
    ports:
      - "5432:5432"
    volumes:
    - ./db:/var/lib/postgresql/data 
      
  postgres_test:
    build:
        context: postgres
        dockerfile: Dockerfile
    networks:
      par_net:
        ipv4_address: 10.2.1.3
    restart: always
    environment:
      POSTGRES_USER: postgres_test
      POSTGRES_PASSWORD: asdfasdf_test
      POSTGRES_DB: UDK2_test
    ports:
      - "54321:5432"
    volumes:
    - ./db_test:/var/lib/postgresql/data 

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    networks:
      par_net:
        ipv4_address: 10.2.1.4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@test.test
      PGADMIN_DEFAULT_PASSWORD: asdfasdf
    ports:
      - 8105:80
    depends_on:
      - postgres_udk
  
  redis_udk:
    image: redis:7.2.4
    networks:
      par_net:
        ipv4_address: 10.2.1.10
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 
    volumes: 
      - ./cache:/data

volumes:
  db:
    driver: local
  db_test:
    driver: local
  cache:
    driver: local
    

  # api:
  #   container_name: udk2_api    
  #   depends_on:
  #     - postgres_udk
  #     - redis_udk
  #   build:
  #       context: ../
  #       dockerfile: Dockerfile
  #   networks:
  #     par_net:
  #       ipv4_address: 10.2.1.1
  #   restart: always
  #   environment:
  #     PORT: 3001
  #     DB_HOST: postgres_udk
  #     DB_HOST_TEST: postgres_test
  #     DB_PORT: 5432
  #     DB_PORT_TEST: 54321
  #     DB_DATABASE: UDK2
  #     DB_USERNAME: postgres
  #     DB_PASSWORD: asdfasdf
  #     REDIS_HOST: cache
  #     REDIS_PORT: 6379
  #     TYPEORM_ENTITIES: src/entities/**/*entity.ts
  #     TYPEORM_MIGRATIONS: src/DB/migrations/**/*.ts
  #     TYPEORM_LOGGING: true      
  #   ports:
  #     - "3001:3001"
       
